version: '3.8'

services:
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: ihd_analytics_db
    restart: always
    environment:
      - POSTGRES_USER=ihd_user
      - POSTGRES_PASSWORD=ihd_password
      - POSTGRES_DB=ihd_analytics
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./uploads:/uploads
    networks:
      - ihd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ihd_user -d ihd_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: ihd_analytics_api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ihd_analytics
      - SPRING_DATASOURCE_USERNAME=ihd_user
      - SPRING_DATASOURCE_PASSWORD=ihd_password
      - SERVER_SERVLET_CONTEXT_PATH=/
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - ihd_network
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ihd_analytics_frontend
    restart: always
    depends_on:
      - api-service
    environment:
      - REACT_APP_API_URL=http://api-service:8080
      - REACT_APP_USE_MOCK_API=false
    ports:
      - "3000:80"
    networks:
      - ihd_network

networks:
  ihd_network:
    driver: bridge

volumes:
  postgres_data:
